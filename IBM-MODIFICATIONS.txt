Patch security vulnerabilty for headers accepting non-ASCII text

- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-9562
- Markmail / Google Group / StackOverflow reference: 
- Worklight RTC work item number: (APAR) 86704
- Cherry-pick: 5cfc7da8119512dee97a98639ebff4f07321a29b, 
77305c2b8a6e74929025b9e8184697edf4c7eeeb
- CVE-2015-5204
- Full description:  For Android applications that allow HTTP headers to be 
set by the File Transfer plugin, the file being uploaded can manipulate the
header through non-ASCII text in the filename. This allows for for cookies to 
be forged by the Cordova application, or for the file payload to be replaced 
in some situations. Remotely hosted applications and applications developed 
with Cordova that allow the user to manually enter the filename are especially 
vulnerable to this issue. The solution is to limit the characters in the headers 
to just ASCII text.

Security Vulnerability Patch for Exploiting Intents

- Cordova RTC work item number: 75631
- Apache Cordova Jira issue: 
- Markmail / Google Group / StackOverflow reference:
- IBM PMR: 9X999,999,000
- Worklight RTC work item number: (APAR) 75615
- CVE-2015-1835: Remote exploit of secondary configuration variables in Apache Cordova on Android
- Full description: Unwanted users are able to use intents to start an application 
and modify the config.xml with preferences that the developer did not specify. The 
intent injects the preference tag with a name and value into the config.xml so the 
unwanted user is able to start and exploit the application remotely. The vulnerability 
is limited to injecting the preference tag, but it is still exploiting the application 
nonetheless. The fix for this is to remove the intent functionality. No one will be 
able to use intents to start their app or inject preferences. 

Apply security fixes for cordova-android vulnerabilities

- RTC work item number: 45720
- Apache Cordova Jira issue: 
- Markmail or Google Group reference:
- Product PMR:
- Description: Severe remote exploitation vulnerabilities were discovered in 
Cordova-android. These were filed as CVE-2014-3500 (Cross-application scripting
via Android intent URLs), CVE-2014-3501 (Cordova whitelist bypass for non-http URLs)
and CVE-2014-3502 (Cordova apps can potentially leak data to other apps via android intent URLs.)
Because this stream is so out of date, we chose to apply as many security fixes as possible knowing
that most would not be a one-to-one backport but instead a manual copy of the functionality. 
For CVE 3500, we were able to remove the ability to set the startURL and errorURL from an Intent.
Now, the startURL will always be file:///android_asset/www/index.html - it cannot be customized. The 
errorUrl is not used and a dialog is instead shown if there is an error page.
For CVE 3501, we make sure to add the CATEGORY_BROWSABLE to any intents not explicitly handled by
the Cordova code (like sms:, mailto:, etc.,) so that these intents can only be opened by a browser.
For CVE 3502 we block access to "app_webview" folder that contains cookies, SQLite databases, and other
potentially sensitive data. 