Patch security vulnerabilty for headers accepting non-ASCII text

- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-9562
- Markmail / Google Group / StackOverflow reference: 
- Worklight RTC work item number: (APAR) 86704
- Cherry-pick: 5cfc7da8119512dee97a98639ebff4f07321a29b, 
77305c2b8a6e74929025b9e8184697edf4c7eeeb
- CVE-2015-5204
- Full description:  For Android applications that allow HTTP headers to be 
set by the File Transfer plugin, the file being uploaded can manipulate the
header through non-ASCII text in the filename. This allows for for cookies to 
be forged by the Cordova application, or for the file payload to be replaced 
in some situations. Remotely hosted applications and applications developed 
with Cordova that allow the user to manually enter the filename are especially 
vulnerable to this issue. The solution is to limit the characters in the headers 
to just ASCII text.

Security Vulnerability Patch for Exploiting Intents

- Cordova RTC work item number: 75631
- Apache Cordova Jira issue: 
- Markmail / Google Group / StackOverflow reference:
- IBM PMR: 9X999,999,000
- Worklight RTC work item number: (APAR) 75615
- CVE-2015-1835: Remote exploit of secondary configuration variables in Apache Cordova on Android
- Full description: Unwanted users are able to use intents to start an application 
and modify the config.xml with preferences that the developer did not specify. The 
intent injects the preference tag with a name and value into the config.xml so the 
unwanted user is able to start and exploit the application remotely. The vulnerability 
is limited to injecting the preference tag, but it is still exploiting the application 
nonetheless. The fix for this is to remove the intent functionality. No one will be 
able to use intents to start their app or inject preferences. 

Apply security fixes for cordova-android vulnerabilities

- RTC work item number: 45720
- Apache Cordova Jira issue: 
- Markmail or Google Group reference:
- Product PMR:
- Description: Severe remote exploitation vulnerabilities were discovered in 
Cordova-android. These were filed as CVE-2014-3500 (Cross-application scripting
via Android intent URLs), CVE-2014-3501 (Cordova whitelist bypass for non-http URLs)
and CVE-2014-3502 (Cordova apps can potentially leak data to other apps via android intent URLs.)
The fixes included getting errorURL and startURL only from the Config class and never from
intent extras, editing the whitelist logic, and creating a new "internal" whitelist for
intent URLs that should be allowed (geo:, sms:, etc.). For Cordova 2.6.0esr, we had to 
manually insert changes from b0b628ff into IceCreamCordovaWebViewClient becuase it was
not a clean merge due to previous backports. Also had to make some manual adjustments to
make sure everything compiled, like adding back in the org.apache.cordova.api namespace
to certain files. 

RTC: 38095 - Investigate/backport CB-4096: whitelist rewrite to 2.9x and below

- RTC work item number: 38095
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-4096
- Markmail or Google Group reference: private mailing list, thread "Fwd: Security Vulnerabilities in Apache Cordova / PhoneGap"
- Product PMR: none
- Description: This commit is to pre-emptively backport Whitelist support to 2.3.0esr.
A security issue was filed against Cordova: http://seclists.org/bugtraq/2014/Jan/96 
The community response was to claim that most of the identified issues were not a problem
if users follow best practices: https://wiki.apache.org/cordova/BugtraqResonseDraft
However, there is valid bug in the Whitelist starting at 2.9.x and below: if foo.com
is whitelisted, foo.com.evil.com will also pass the whitelist test. This was fixed in 3.1
by rewriting the whitelist implementation. This commit backports that fix and other commits
required for a clean cherry-pick. Note that if you replace the .jar in a current 2.3 project
with this updated .jar, you will need to make modifications to your project's
/src/name/space/Activity.java file to run Config.init() and super.loadUrl(Config). You can see the 
correct Activity.java file by creating a new project with the updated JAR and looking at the source
file inside the built Android application. This is because cherry-pick 958424ce changes the 
bin/templates/project/Activity.java file that is used as the template for your Android project. 

RTC: 31827 - PMR 81991,211,788 : video capture on 4.3 Nexus

Video Capture fails with Android 4.3 on Nexus devices

- RTC work item number: 31827
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-5202
- Markmail or Google Group reference: none
- Product PMR: PMR 81991,211,788
- Description: Capturing video with a Nexus device running Android 4.3 was failing
because Android was not returning the correct file location for the newly recorded video.
The fix involved grabbing the newly created video's file location if it did not exist
in the intent. The bug seems to be isolated to Nexus devices on Android 4.3.


RTC: 31535 - Backport CB-5398 (image picker) to ESR

Workaround image picker issue with content:// URIs

- RTC work item number: 31535
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-5398
- Markmail or Google Group reference: http://stackoverflow.com/questions/19834842/android-gallery-on-kitkat-returns-different-uri-for-intent-action-get-content
- Product PMR: APAR: http://www.ibm.com/support/docview.wss?uid=swg1PI07246
- Description: Backport CB-5398 to this branch. Without it, starting in Android
4.4.x, selecting an image with the Camera plugin API would only work when
the image was chosen from "Downloads" folder, or when the user chose an image by
going through the Gallery app, or when the image was returned as a DATA_URL.
This issue is caused by a content:// URI encoding problem with Android. The workaround
chosen forces the image picker to always go through the Gallery app instead of the 
StorageAccessFramework, which was introduced in 4.4. 


webview methods need to be run on UI thread starting in Android 4.3

- RTC work item number: 31733
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-4858
- Markmail or Google Group reference: none
- Product PMR: none
- Description: backport CB-4858 to this branch. Without it, starting in Android
  4.3 the InAppBrowser may fail to open, and calls to window.open for the 
  InAppBrowser would throw a Java exception. Also found an issue where using
  a declared feature on window.open besides "location" would cause a
  NullPointerException. Also fixed the project.properties file to remove the
  reference to Google APIs and just use Android APIs.


Android L changes type from Mobile to Cellular
- Cordova RTC work item number: 53257
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-7595
- Markmail / Google Group / StackOverflow reference:
- IBM PMR: (found before shipped)
- Worklight RTC work item number:
- Full description: Android L changes the network type from “mobile” to “cellular”, was returning “unknown” when connected to cellular network because of this issue

Apply security fixes to tighten up Java methods exposed via addJavascriptInterface()

- RTC work item number: 55240
- Apache Cordova Jira issue: https://github.com/corimf/cordova-android/commit/8f54290eeccab441504f9e3a913a4fbacd3b89d6
- Markmail or Google Group reference:
- Product PMR: APAR PI30009 (RTC 57373)
- Description: Prevent undesired Java methods from being exposed via addJavaScriptInterface()

