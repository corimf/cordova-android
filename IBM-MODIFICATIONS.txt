Add Android M permission support to Cordova
- Cordova RTC work item number: 106363
- Apache Cordova Jira issue: 
- Markmail or Google Group reference:
- Product PMR: APAR PI61332 (RTC 106363)
- Cherry-pick: 8981ddb681c21eb521562b860c35361291ca09be, 9a339437839f2e245e90353da5fd7b3b8b832325,
07912fdecd3627332e706497430111c72a30b267, a0747aa960cd906beb3249e3d91443a0ea3e1578,
5e0c9595c3ff813af6c21a5483926d1225874a7f, 47ac5148357050e182ad54dda02d5c96aa17a60b,
013ad94af0a9f0d1f4d4a90528308ce19840c49d, 4db1fecba887defbf7228edd7e4f2ab85d0d34bb,
7e480d1ff90fd64acb17c0458d96fce8ba1942da
- Full description: The Android M permission model will request for permissions at 
run time. To add this support, the activity and Cordova plugins will need to add 
permission request functions in Android API 23 to handle the runtime permissions.

Destroy Cordova Webview when onDestroyed() is called
- Cordova RTC work item number: 101382
- Apache Cordova Jira issue: 
- Markmail or Google Group reference:
- Product PMR: APAR PI57332 (RTC 101382)
- Full description: The Cordova Webview is never destroyed when the application is 
sent to the background. When the application resumes from the background, a new 
instance of the webview is created while the old webview is not cleared. The old 
webview will be cleared when the application is killed or the OS kills it to clear 
some memory. The Cordova Activity's onDestroy() method never actually destroys the 
webview, so it causes a problem of multiple leaked webviews in a detatched state. 
This takes up memory, so it is better to destroy the webview when the application 
goes to the background. 


Don't Call pauseTimers() in startActivityForResult()
- Cordova RTC work item number: 94380
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-7947
(modified a little)
- Markmail or Google Group reference:
- Product PMR: APAR PI52650 (RTC 94380)
- Full description: Calling pauseTimers() in startActivityForResult() 
causes major issues to the webview on page load. The page hangs waiting
to resume, so no JavaScript or anything else gets executed. The activity's
onPause is already fired, so no need to call pauseTimers from 
startActivityForResult.

Move requestFocusFromTouch() to be called during createViews()

- Cordova RTC work item number: 
- Apache Cordova Jira issue: 
- Markmail / Google Group / StackOverflow reference: 
- IBM PMR: 31962,999,766 (87879)
- Worklight RTC work item number: (APAR) 98139
- Cherry-pick: 
- Full description: Due to moving createViews() to be called before plugin 
initialization, the function requestFocusFromTouch() was being called later, and 
this caused some complication with the focusing of the app if you add a dialog. The 
button on the dialog would appear as if it is being pressed, thus having focus on 
startup without user input. Moving that function to be called ealier returned it to 
the expected behavior. 

Fixed Weak Randomization of BridgeSecret for Apache Cordova Android Vulnerability

- Cordova RTC work item number: 
- Apache Cordova Jira issue: 
- Markmail / Google Group / StackOverflow reference: 
- IBM PMR: 
- Worklight RTC work item number: (APAR) 94881
- Cherry-pick: b37498d5f61faf37c5cbe7ca58f004ceacdffb0f, 
16343ffe7009dca68af77a53cebb90e76d6a9fe3, 53dae454308d6a0d03c653f85b330d4678290fab
- Full description:  Cordova uses a bridge that allows the Native Application to 
communicate with the HTML and Javascript that control the user interface. To protect 
this bridge on Android, the framework uses a BridgeSecret to protect it from 
third-party hijacking. However, the BridgeSecret is not sufficiently random and can 
be determined in certain scenarios. Using a secure randomization function will 
ensure that the BridgeSecret is better randomized and secure. 

Security Vulnerability Patch for Exploiting Intents

- Cordova RTC work item number: 75631
- Apache Cordova Jira issue: 
- Markmail / Google Group / StackOverflow reference:
- IBM PMR: 9X999,999,000
- Worklight RTC work item number: (APAR) 75615
- Cherry-pick: a64203f8174b42d6359f0bbdc7b69d96497b203a
- CVE-2015-1835: Remote exploit of secondary configuration variables in Apache Cordova on Android
- Full description: Unwanted users are able to use intents to start an application 
and modify the config.xml with preferences that the developer did not specify. The 
intent injects the preference tag with a name and value into the config.xml so the 
unwanted user is able to start and exploit the application remotely. The vulnerability 
is limited to injecting the preference tag, but it is still exploiting the application 
nonetheless. The fix for this is to remove the intent functionality. No one will be 
able to use intents to start their app or inject preferences. 

Fix app crash due to ConcurrentModificationException

- Cordova RTC work item number: 60315
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-8031 and 
     https://issues.apache.org/jira/browse/CB-8031
- Markmail / Google Group / StackOverflow reference:
- IBM PMR: 9X999,999,000
- Worklight RTC work item number: (APAR) 60069
- Cherry-pick: 1feaa7fed717d1f6e02508a280190c3d6914f95c
- Full description: Using plugins sometimes causes the application to crash because of 
a ConcurrentModificationException. Plugins execute on non-ui thread by default, and if 
a plugin calls "getPlugin()" while the ui thread is dispatching an onMessage (or one of 
the various other plugin functions), then the "for (CordovaPlugin p : pluginMap.values())"
fires an exception due to getPlugin() modifying the map. This is a race condition and 
is solved by adding a null entry for each non-startup plugin to avoid the
ConcurrentModificationException. 
Also need to create the webview before initializing plugins. 

Fix leaked window, when hitting back button while alert being rendered

- Cordova RTC work item number: 43292
- Apache Cordova Jira issue:  https://issues.apache.org/jira/browse/CB-6837
- Markmail or Google Group reference: n/a
- Product PMR: n/a
- Worklight RTC work item number: 42684
- Cherry-pick: 890e12c30674d7b4dff54082e9ee879505475e19
- Description: When hitting the back button while alert dialog is being rendered causes a leaked window,
when resuming the app by clicking on its icon using the home screen or using the Multitask button, 
the webview doesn't render completely, it shows a blackscreen. 

This is get fixed by keeping track of the last AlertDialog showed.
The last dialog showed that is rendered while hitting back button it causes a leaked window, 
so during onDestroy event, the webview will only destroy the last one showed, avoiding 
the exception and fixing the problem.

change in Cordova Android 3.6 initialization breaks WL

- RTC work item number: 52896
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-7674
- Markmail or Google Group reference: http://callback-dev.markmail.org/thread/gcfaz4ffchf3wo2s
- Product PMR/APAR: found internally before release
- Description: During the 3.6.0 development timeframe, a modification was made to CordovaActivity.onCreate() to move the activation of preferences to CordovaActivity.init(). For applications that were relying on the activation of preferences in onCreate(), those preferences are no longer active when onCreate() completes, and may break those applications. Although it is described as a "subtle change to the API surface" in the commit message, this is a breaking change to a public API.

BIDI text not mirrored correctly in Android dialogs

- RTC work item number: 49825
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-7499
- Markmail or Google Group reference:
- Product PMR: APAR: 
- Description: When the device locale is set to a LTR language, any RTL
string should be left-justified. This fix involved adding supportsLTR
attribute to AndroidManifest.xml as well as adding some changes into
cordova-plugin-dialogs to use the device's locale. These changes to the 
plugin are in commit: c88acd6. The plugin changes don't need to be backported
because they made it into a plugin refresh that went into WL6.3
